---
description: 
globs: 
alwaysApply: true
---
# my-rule

## 1. 代码规范
- 所有代码必须使用标准C语言（推荐C99）。
- 变量、函数、结构体命名要见名知意，风格统一。
- 建议缩进4个空格，保持代码整洁。

## 2. 注释规范
- 每个函数前要有注释，说明功能、参数和返回值。
- 关键算法、复杂逻辑处要有行内注释，帮助理解。
- 示例：
  ```c
  // 计算两个整数的和
  // 参数：a, b - 需要相加的整数
  // 返回值：a和b的和
  int add(int a, int b) {
      return a + b; // 返回结果
  }
  ```

## 3. 学习与提示
- 每个主要模块或文件开头写简要说明，介绍功能。
- 新语法、新函数要写注释解释其用途。
- 有不懂的地方，随时在聊天中提问，AI会详细讲解。

## 4. 项目结构建议
- 每个小游戏单独一个.c文件，公共函数可放在utils.c。
- 建议有README.md，记录玩法、实现思路和学习收获。

## 5. 进阶要求
- 鼓励使用结构体、指针、文件操作等C语言特性。
- 尝试实现用户输入、简单动画、关卡存档等功能。

## 6. 交流与学习
- 开发过程中遇到任何问题，随时在聊天中提问。
- AI会提供详细解释、代码示例和学习建议。
